#packopt name "オセロ学習 ver3.0.exe"


#include "MinMax法モジュール.hsp"
#include "GAモジュール.hsp"
randomize
screen 0,100 * 8, 100 * 8

//変数初期化
    len = 100
    biont_num = 10
    generation_num = 0

    dim ScoreBoard, biont_num, len
    dim NewScoreBoard, biont_num, len
    dim ArgBoard, len
    dim score, biont_num

    //初期遺伝子生成
    i = 0
    repeat biont_num
        j = 0
        repeat len
            ScoreBoard.i.j = rnd(201) - 100
            j++
        loop
        i++
    loop

//メイン
repeat
    i = 0
    repeat biont_num
        score = 0
        i++
    loop
    //対戦させる
        i = 0
        repeat biont_num
            j = 0:repeat len:ArgBoard.j = ScoreBoard.i.j:j++:loop
            repeat 5
                ClearField field
                turn = 1
                CheckField field, IPDW, WCP, turn
                PutDiskPos = MinMax_3(field, turn, ArgBoard)
                repeat
                    if(turn == 1){
                        if(WCP(0) == 0) : break
                        PutDisk field, IPDW, WCP, PutDiskPos \ 10, PutDiskPos / 10, turn
                    }else{
                        if(WCP(0) == 0) : break
                        PutNum = rnd(WCP(0)) + 1
                        PutDisk field, IPDW, WCP, WCP(PutNum) \ 10, WCP(PutNum) / 10, turn
                    }
                    turn *= -1
                    repeat 2
                        CheckField field, IPDW, WCP, turn
                        PutDiskPos = MinMax_3(field, turn, ArgBoard)
                        if(WCP(0) != 0) : break
                        turn *= -1
                    loop
                    await 
                    
                loop
                DrawField field
                black_num = 0
                white_num = 0
                k = 1
                repeat 8
                    l = 1
                    repeat 8
                        if(field.k.l == 1) : black_num++ : else : if(field.k.l == -1) : white_num++;        
                        l++
                    loop
                    k++
                loop

                if(black_num > white_num){
                    score.i += 4
                }else : if(black_num == white_num){
                    score.i += 1
                }else{
                    score.i += 0
                }
            loop
            i++
        loop
    //ソート
        SortScore score, ScoreBoard, biont_num, len
    //交叉
        //上位3つを保存
            i = 0
            childlen_num = 0
            repeat 2
                j = 0
                repeat len
                    NewScoreBoard.childlen_num.j = ScoreBoard.childlen_num.j
                    j++
                loop
                i++ : childlen_num++
            loop
    //交叉
        i = 0
        repeat 3
            //ここから本格的な交叉(二点交叉)
                k = 0
                repeat len
                    NewScoreBoard.childlen_num.k = ScoreBoard.(i + 1).k
                    NewScoreBoard.(childlen_num + 1).k = ScoreBoard.i.k
                    k++
                loop
                left = rnd(len):right = rnd(len)
                if(left > right):tmp = left:left = right:right = tmp
                k = left
                repeat
                    if(k > right):break
                    NewScoreBoard(childlen_num, k) = ScoreBoard(i, k)
                    NewScoreBoard(childlen_num + 1, k) = ScoreBoard(i + 1, k)
                    k++
                loop
            //突然変異
                k = 0
                repeat len
                    if(rnd(len) == 0){
                        NewScoreBoard(childlen_num, k) = rnd(201) - 100
                    }
                    if(rnd(len) == 0){
                        NewScoreBoard(childlen_num + 1, k) = rnd(201) - 100
                    }
                    k++
                loop
                childlen_num += 2;
            i += 2
        loop
    //不足分の追加
        i = childlen_num
        repeat 1
            j = 0
            repeat len
                NewScoreBoard.i.j = rnd(201) - 100
                j++
            loop
            i++
        loop
    //記録
        if(generation_num \ 1 == 0) {
            note = ""
            i = 0
            repeat len
                notesel note
                noteadd "" + ScoreBoard.0.i
                i++
            loop
    
            notesel note
            notesave "ver3.0学習結果/" + str(generation_num) + ".txt"
        }
    //世代交代
        i = 0
        repeat biont_num
            j = 0
            repeat len
                ScoreBoard(i, j) = NewScoreBoard(i, j)
                j++
            loop
            i++
        loop
    generation_num++
    await
loop