#module QuickSort
    #deffunc qsortInc array target, array target_number, int first,int last

        if(first < last){
            pivot = first;
            i = first;
            j = last;

            repeat
                if(i < j){
                    repeat
                        if((target(pivot) >= target(i)) && (i < last)){
                            i++;
                        }else{
                            break
                        }
                    loop
                    repeat
                        if(target(pivot) < target(j)){
                            j--;
                        }else{
                            break
                        }
                    loop
                    if(i < j){
                        temp = target(i):target(i) = target(j):target(j) = temp
                        temp = target_number(i):target_number(i) = target_number(j):target_number(j) = temp
                    }
                }else{
                    break
                }
            loop

            temp = target(pivot):target(pivot) = target(j):target(j) = temp
            temp = target_number(pivot):target_number(pivot) = target_number(j):target_number(j) = temp

            qsortInc target, target_number, first, j - 1
            qsortInc target, target_number, j + 1, last
        }
    return

    #deffunc qsortDec array target, array target_number, int first,int last

        if(first < last){
            pivot = first;
            i = first;
            j = last;

            repeat
                if(i < j){
                    repeat
                        if((target(pivot) <= target(i)) && (i < last)){
                            i++;
                        }else{
                            break
                        }
                    loop
                    repeat
                        if(target(pivot) > target(j)){
                            j--;
                        }else{
                            break
                        }
                    loop
                    if(i < j){
                        temp = target(i):target(i) = target(j):target(j) = temp
                        temp = target_number(i):target_number(i) = target_number(j):target_number(j) = temp
                    }
                }else{
                    break
                }
            loop

            temp = target(pivot):target(pivot) = target(j):target(j) = temp
            temp = target_number(pivot):target_number(pivot) = target_number(j):target_number(j) = temp

            qsortDec target, target_number, first, j - 1
            qsortDec target, target_number, j + 1, last
        }
    return
#global