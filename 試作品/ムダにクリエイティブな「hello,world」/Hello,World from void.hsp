#include "レーベンシュタイン距離.hsp"
#module _GA_
    #defcfunc ScoreCalc array ans, array gen
        anslen = strlen(ans)
        genlen = strlen(gen)
        ret = anslen * 2 + abs(anslen - genlen) * 2
        i = 0
        repeat min(anslen, genlen)
            if(peek(gen, i) == peek(ans, i)):ret--;
            i++
        loop
        i = min(anslen, genlen) - 1
        repeat min(anslen, genlen)
            if(peek(gen, i) == peek(ans, i)):ret--;
            i--
        loop
    return ret
    #deffunc SortScore array score, array gen, int gen_num, int len
        //選択ソート
            i = 0
            repeat gen_num - 1
                maxi = i
                j = i + 1
                repeat
                    if(j >= gen_num):break;
                    if(score(j) < score(maxi)):maxi = j; 
                    j++
                loop
                tmp = score(i):score(i) = score(maxi):score(maxi) = tmp
                tmp = gen(i):gen(i) = gen(maxi):gen(maxi) = tmp
                i++
            loop
    return
#global

randomize
screen 0, 800, 600, 0, 0, 0
wait 500

gen_num = 800
ans = "Hello, World!"
len = strlen(ans)
sdim gen, 1000, gen_num
sdim child_gen, 1000, gen_num
dim score, gen_num
//初期化
    //答え生成
    //初期遺伝子生成
        i = 0
        repeat gen_num
            j = 0
            repeat len
                poke gen(i), j, rnd(256)
                ;gen(i) = "Hllo,World!O"
                j++
            loop
            i++
        loop
    //スコア初期化
        i = 0
        repeat gen_num
            score(i) = 0
            i++
        loop
//メイン
    font "", 16
    repeat
        //スコア計算//個体評価
            i = 0
            repeat gen_num
                score(i) = int(LevenshteinDistance(ans, gen(i))) + int(ScoreCalc(ans, gen(i)))
                i++
            loop
        //ソート後の遺伝子
            ;pos ,0:i = 0:repeat gen_num:pos 100, :j = 0:repeat len:mes gen(i, j), 1:j++:loop:mes " " + score(i):i++:loop
        //ソート
            SortScore score, gen, gen_num, len
        //ソート後の遺伝子
            redraw 0
                color 255, 255, 255:boxf:color 0,0,0:pos ,0
                i = 0
                repeat gen_num
                    pos 0, 
                    mes gen(i) + " " + score(i)
                    i++
                loop
            redraw 1
        //交叉 + 突然変異
            //親を半分保存
                i = 0
                repeat gen_num / 2
                    child_gen(i) = gen(i)
                    i++
                loop
            //子を生成
                k = 0
                repeat
                    //子を二点交叉で生成
                        if(i + 1 >= gen_num):break
                        child_gen(i) = gen(i)
                        child_gen(i + 1) = gen(i + 1)

                        left = rnd(len):right = rnd(len)
                        if(left > right):tmp = left:left = right:right = tmp
                        j = left
                        repeat
                            if(j > right):break
                            poke child_gen(i), j, peek(gen(k + 1), j)
                            poke child_gen(i + 1), j, peek(gen(k), j)
                            j++
                        loop
                    //突然変異
                        j = 0
                        repeat len
                            p = rnd(len)
                            if(p == 0){
                                p = rnd(3)
                                if(p == 0){
                                    poke child_gen(i), j, rnd(256)
                                }else:if(p == 1){
                                    buf = child_gen(i);
                                    child_gen(i) = "";
                                    //一文字追加
                                    iter = rnd(strlen(buf) + 1)
                                    if(strlen(buf) != 0):iter = rnd(strlen(buf)):else:child_gen(i) += strf("%c", rnd(256));
                                    l = 0
                                    repeat strlen(buf)
                                        child_gen(i) += strf("%c", peek(buf, l))
                                        if(i == iter):child_gen(i) += strf("%c", rnd(256));
                                        l++
                                    loop
                                }else{
                                    buf = child_gen(i);
                                    child_gen(i) = "";
                                    if(strlen(buf) != 0):iter = rnd(strlen(buf)):else:iter = 0;
                                    l = 0
                                    repeat strlen(buf)
                                        if(l == iter):continue
                                        child_gen(i) += strf("%c", rnd(256))
                                        l++
                                    loop
                                }
                            }
                            j++
                        loop
                    i += 2
                    k += 2
                loop
        //世代交代
            i = 0
            repeat gen_num
                gen(i) = child_gen(i)
                i++
            loop
        await
    loop
