#module
    #defcfunc min int a, int b
        aa = a:bb = b;
        if(aa < bb):return aa:else:return bb
#global
#module 
    #defcfunc LevenshteinDistance str a, str b
        aa = a
        bb = b
        
        alen = strlen(aa)
        blen = strlen(bb)

        dim dp, alen + 10, blen + 10

        i = 0
        repeat alen + 1
            dp.i.0 = i
            i++
        loop
        i = 0
        repeat blen + 1
            dp.0.i = i
            i++
        loop

        i = 1
        repeat alen
            j = 1
            repeat blen
                if(peek(aa, i - 1) == peek(bb, j - 1)){
                    cost = 0
                }else{
                    cost = 1
                }
                dp(i, j) = min(min(dp(i - 1, j) + 1, dp(i, j - 1) + 1), dp(i - 1, j - 1) + cost)
                //pos i * 16, j * 16 : mes dp(i, j)
                j++
            loop
            i++
        loop
    return dp(alen, blen)
#global

mes LevenshteinDistance("nintendo","sega")